@using Microsoft.AspNetCore.Identity;
@using NddcMrmsLabsLibrary.Data.Labs;

@inject IPatientData patientDb
@inject ILabsData labDb

@if (AddTestResultToggle == false)
{
    <div class="card">
        <div class="card-header">
            <span class="float-end"><button type="button" @onclick="ViewAddTestResult" class="btn rounded-pill btn-success waves-effect waves-light">Add Test Result</button></span>
            <h6 class="card-title mb-0">Test Description</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive table-card">
                <table class="table table-nowrap table-striped-columns mb-0">
                    <thead class="table-light">
                        <tr>
                           
                            <th scope="col">S/N</th>
                            <th scope="col">Process Name</th>
                            <th scope="col">Test Result</th>
                            <th scope="col">Result Unit</th>
                            <th scope="col">Refference Value</th>
                            <th scope="col">Date Conducted</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in InvestigationList)
                        {
                            <tr>

                                <td><a href="#" class="fw-semibold">@item.SrNo.</a></td>
                                <td>@item.ExaminationType</td>
                                <td>@item.TestResult</td>
                                <td><span>@item.ResultUnit</span></td>
                                <td><span>@item.RefRange</span></td>
                                <td><span>@item.DateConducted</span></td>
                                <td>
                                    <button type="button" @onclick="() => ShowEditControls(item.Id)" class="btn btn-sm btn-light">Edit</button>
                                </td>
                            </tr>
                        }
                        
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @if (ShowEdit)
    {
        <p>Show Edit</p>
    }
}

@if (AddTestResultToggle == true)
{
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <div class="float-end h-stack">
                        <button type="button" @onclick="SaveInvestigation" class="btn rounded-pill btn-success waves-effect waves-light">Save</button>
                        <button type="button" @onclick="CancelSave" class="btn rounded-pill btn-secondary waves-effect waves-light">Cancel</button>
                    </div> 
                    @* <span class="float-end"><button type="button" @onclick="SaveInvestigation" class="btn rounded-pill btn-success waves-effect waves-light">Save</button></span> *@
                    <h4 class="card-title mb-0 flex-grow-1">Test Results</h4>
                </div><!-- end card header -->
                <div class="card-body">
                    <form method="post">
                        <input hidden="true" @bind="Investigation.Id" class="form-control" placeholder="">
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Medical Examination Year</label>
                            </div>
                            <div class="col-lg-6">
                                <select id="ForminputState" @bind="Investigation.ExaminationYear" class="form-select" data-choices="" data-choices-sorting="true">
                                    <option Value="0">Select...</option>
                                    <option Value="2021">2021</option>
                                    <option Value="2022">2022</option>
                                    <option Value="2023">2023</option>
                                    <option Value="2024">2024</option>
                                    <option Value="2025">2025</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Process Category</label>
                            </div>
                            <div class="col-lg-6">
                                @* This bind:event helps to distract the conflict between bind and onchange to allow the onchange event fire *@
                                <select class="form-select" @bind="Investigation.ExaminationCategoryId" @bind:event="oninput" @onchange="FillExamType">
                                    <option value="0">Choose...</option>
                                    @if (ExamCategories != null)
                                    {
                                        @foreach (var item in ExamCategories)
                                        {
                                            <option value="@item.Id">@item.ExaminationCategory</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Process Name</label>
                            </div>
                            <div class="col-lg-6">
                                <select class="form-select" @bind="Investigation.ExaminationTypeId">
                                    <option value="0">Choose...</option>
                                    @if (ExamTypes != null)
                                    {
                                        @foreach (var item in ExamTypes)
                                        {
                                            <option value="@item.Id">@item.ExaminationType</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Test Result</label>
                            </div>

                            <div class="col-lg-6">
                                <input @bind="Investigation.TestResult" class="form-control" placeholder="">
                            </div>
                        </div>


                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Result Unit</label>
                            </div>
                            <div class="col-lg-6">
                                <input @bind="Investigation.ResultUnit" class="form-control" placeholder="">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Normal Refference Range</label>
                            </div>
                            <div class="col-lg-6">
                                <input @bind="Investigation.RefRange" class="form-control" placeholder="">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Flag</label>
                            </div>
                            <div class="col-lg-6">
                                <select @bind="Investigation.Flag" id="ForminputState" class="form-select" data-choices="" data-choices-sorting="true">
                                    <option selected="">Select...</option>
                                    <option>Normal</option>
                                    <option>Abnormal</option>
                                    <option>Severe</option>
                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Date Conducted</label>
                            </div>
                            <div class="col-lg-6">
                                <input @bind="Investigation.DateConducted" type="date" class="form-control" id="exampleInputdate">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Time Reported On</label>
                            </div>
                            <div class="col-lg-6">
                                <input @bind="Investigation.TimeReported" type="time" class="form-control" id="exampleInputtime">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Conducted By</label>
                            </div>
                            <div class="col-lg-6">
                                <input @bind="Investigation.ConductedBy" class="form-control" placeholder="">
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-lg-3">
                                <label class="form-label">Diagnosis Summary</label>
                            </div>
                            <div class="col-lg-6">
                                <textarea @bind="Investigation.Summary" class="form-control" id="exampleFormControlTextarea5" rows="3"></textarea>
                            </div>
                        </div>
                        
                        @*  <div class="text-end">
                    <button type="submit" class="btn btn-primary">Add Bank</button>
                    </div> *@
                    </form>
                </div>
            </div>
        </div>
        <!--end col-->
    </div>
}


@code {

    [Parameter]
    public int EmpId { get; set; } 
    [Parameter]
    public string UserId { get; set; }
    [Parameter]
    public int LabId { get; set; }

    public bool AddTestResultToggle { get; set; }

    public List<MyExaminationCategoryModel> ExamCategories = new();
    public List<MyExaminationTypeModel> ExamTypes = new();
    public MyInvestigationModel Investigation = new();
    public List<MyInvestigationModel> InvestigationList = new(0);

    public int ItemId { get; set; }

    public Boolean ShowEdit { get; set; }

    public MyRequestModel Request = new();

    protected override void OnInitialized()
    {
        //AddResultsViewStatus = true;
        ExamCategories = patientDb.AllExaminationCategories();
        InvestigationList = patientDb.AllInvestigations(EmpId);
    }

    // [CascadingParameter]
    // private Task<AuthenticationState> authenticationStateTask { get; set; }

    // [Inject]
    // UserManager<IdentityUser> userManager { get; set; }

    public void SaveInvestigation()
    {
        //var user = (await authenticationStateTask).User;

        if (Investigation.Id == 0)
        {
            Investigation.EmpId = EmpId;
            Investigation.LabId = LabId;
            Investigation.AddedBy = UserId;

            //Investigation.ExaminationCategoryId = ItemId;
            patientDb.AddInvestigation(Investigation);
            InvestigationList = patientDb.AllInvestigations(EmpId);

            AddTestResultToggle = false;
        }
        else
        {
            //var currentUser = await userManager.GetUserAsync(user);

            Request.InvestigationId = Investigation.Id;
            Request.UserName = UserId;
            Request.RequestedBy = labDb.GetLabUserFullName(UserId);
            Request.RequestedFrom = labDb.GetLabName(LabId);
            Request.RequestType = "Edit";
            Request.ExaminationYear = Investigation.ExaminationYear;
            Request.ExaminationCategoryId = Investigation.ExaminationCategoryId;
            Request.ExaminationTypeId = Investigation.ExaminationTypeId;
            Request.Result = Investigation.TestResult;
            Request.ResultUnit = Investigation.ResultUnit;
            Request.RefRange = Investigation.RefRange;
            Request.Flag = Investigation.Flag;
            Request.DateConducted = Investigation.DateConducted;
            Request.TimeReportedOn = Investigation.TimeReported;
            Request.Summary = Investigation.Summary;
            Request.DateRequested = DateTime.Now;
            Request.Status = "Pending";

            patientDb.AddRequest(Request);

            AddTestResultToggle = false;
        }

    }

    public void ViewAddTestResult()
    {
        AddTestResultToggle = true;
    }

    private void FillExamType()
    {
        ExamTypes = new();
        ExamTypes = patientDb.AllExaminationTypes(Investigation.ExaminationCategoryId);
    }
    private void CancelSave()
    {
        Investigation = new();
        AddTestResultToggle = false;
    }

    private void ShowEditControls(int Id)
    {
        
        //ShowEdit = true;
        Investigation = patientDb.GetInvestigationDetails(Id);
        ExamCategories = patientDb.AllExaminationCategories();
        ExamTypes = patientDb.AllExaminationTypes(Investigation.ExaminationCategoryId);
        AddTestResultToggle = true;
    }

}
